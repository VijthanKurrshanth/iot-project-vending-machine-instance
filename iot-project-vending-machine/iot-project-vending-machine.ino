#include <WiFiClient.h>
#include <Wire.h>
#include <WiFi.h>
#include <ArduinoMqttClient.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SH1106.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

#define OLED_RESET -1 // Reset pin #
#define SCREEN_ADDRESS 0x3C 
Adafruit_SH1106 display(21, 22);

#define LOGO_HEIGHT   64
#define LOGO_WIDTH    128

//touch input
#define DOWN_PIN 26
#define ENTER_PIN 27
#define EXIT_PIN 14
#define CART_PIN 25
#define RESUPPLY_PIN 33
#define CANCEL_PIN 13

const char  *SSID = "iPhoneGurru";    // SSID of your WiFi
const char  *PASSWORD = "12345678";    // Password of your WiFi
const char  *mqqttBroker = "test.mosquitto.org";
const int   mqttPort = 1883;
const char  *mqttClientID = "NodeMCU1234";

const char  *queryTopic = "Code-red1/Query"; // Topic for Queries to the server
const char  *purchaseTopic = "Code-red1/Purchase"; // Topic for purchases
const char  *resupplyTopic = "Code-red1/Resupply"; // Topic for purchases

WiFiClient espClient;
MqttClient mqttClient(espClient);

// 'mainMenuOled', 128x64px
const unsigned char mainMenuOled [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x01, 0xe0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x01, 0x10, 0x00, 0x00, 0x88, 0x00, 0x00, 0x40, 0x00, 0x10, 0x00, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x01, 0x12, 0x24, 0x40, 0x89, 0x31, 0xc3, 0xc8, 0x8e, 0x3c, 0x70, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x01, 0x12, 0x24, 0x40, 0x89, 0x42, 0x24, 0x48, 0x91, 0x10, 0x88, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x01, 0xe2, 0x24, 0x40, 0xf1, 0x82, 0x24, 0x48, 0x90, 0x10, 0x80, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x01, 0x12, 0x24, 0x40, 0x81, 0x02, 0x24, 0x48, 0x90, 0x10, 0x70, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x01, 0x12, 0x24, 0x40, 0x81, 0x02, 0x24, 0x48, 0x90, 0x10, 0x08, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x01, 0x12, 0x23, 0xc0, 0x81, 0x02, 0x24, 0x48, 0x91, 0x10, 0x88, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x01, 0xe1, 0xc0, 0x40, 0x81, 0x01, 0xc3, 0xc7, 0x0e, 0x0c, 0x70, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0x00, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
	0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x1c, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x22, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x20, 0x38, 0x70, 0x10, 0x1c, 0x38, 0x71, 0xe2, 0x1c, 0x78, 0x70, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x20, 0x44, 0x88, 0x10, 0x22, 0x44, 0x88, 0x82, 0x22, 0x44, 0x88, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x1c, 0x44, 0x88, 0x10, 0x22, 0x40, 0x08, 0x82, 0x22, 0x44, 0x80, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x02, 0x7c, 0xf8, 0x10, 0x22, 0x40, 0x78, 0x82, 0x22, 0x44, 0x70, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x02, 0x40, 0x80, 0x10, 0x22, 0x40, 0x88, 0x82, 0x22, 0x44, 0x08, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x22, 0x44, 0x88, 0x10, 0x22, 0x44, 0x88, 0x82, 0x22, 0x44, 0x88, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x1c, 0x38, 0x70, 0x1f, 0x1c, 0x38, 0x78, 0x62, 0x1c, 0x44, 0x70, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
	0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0xe0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x01, 0x10, 0x00, 0x00, 0x88, 0x00, 0x00, 0x40, 0x00, 0x10, 0x00, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x01, 0x01, 0xc3, 0x80, 0x89, 0x31, 0xc3, 0xc8, 0x8e, 0x3c, 0x70, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x01, 0x02, 0x24, 0x40, 0x89, 0x42, 0x24, 0x48, 0x91, 0x10, 0x88, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0xe2, 0x24, 0x40, 0xf1, 0x82, 0x24, 0x48, 0x90, 0x10, 0x80, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0x13, 0xe7, 0xc0, 0x81, 0x02, 0x24, 0x48, 0x90, 0x10, 0x70, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0x12, 0x04, 0x00, 0x81, 0x02, 0x24, 0x48, 0x90, 0x10, 0x08, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x01, 0x12, 0x24, 0x40, 0x81, 0x02, 0x24, 0x48, 0x91, 0x10, 0x88, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0xe1, 0xc3, 0x80, 0x81, 0x01, 0xc3, 0xc7, 0x0e, 0x0c, 0x70, 0x40, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
	0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char* mainMenuPtr = mainMenuOled;

// 'productComOled', 128x64px
const unsigned char productViewCom [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x0f, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x08, 0x93, 0x10, 0xe1, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 
	0x08, 0x94, 0x11, 0x12, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x0f, 0x18, 0x11, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x08, 0x10, 0x11, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x08, 0x10, 0x11, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x08, 0x10, 0x11, 0x12, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x08, 0x10, 0x10, 0xe1, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x07, 0x00, 0x00, 0x21, 0x00, 0x20, 0x20, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x08, 0x80, 0x00, 0x01, 0x00, 0x20, 0x20, 0x00, 0x44, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x08, 0x91, 0x1c, 0x21, 0x0e, 0x3c, 0x21, 0xc0, 0x44, 0xf2, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 
	0x08, 0x91, 0x22, 0x21, 0x11, 0x22, 0x22, 0x20, 0x44, 0x42, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x08, 0x91, 0x02, 0x21, 0x01, 0x22, 0x22, 0x20, 0x44, 0x42, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x0f, 0x91, 0x1e, 0x21, 0x0f, 0x22, 0x23, 0xe0, 0x44, 0x42, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x08, 0x91, 0x22, 0x21, 0x11, 0x22, 0x22, 0x00, 0x54, 0x42, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x08, 0x8a, 0x22, 0x21, 0x11, 0x22, 0x22, 0x20, 0x48, 0x41, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x08, 0x84, 0x1e, 0x20, 0x8f, 0x3c, 0x11, 0xc0, 0x34, 0x30, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char* productViewComPtr = productViewCom;

// 'product1', 75x12px
const unsigned char buyMenuproduct1 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x06, 0x00, 0x00, 
	0x00, 0x01, 0x80, 0x00, 0x66, 0x00, 0x00, 0x06, 0x00, 0x00, 0x30, 0x03, 0x80, 0x00, 0x66, 0x66, 
	0x3c, 0x3e, 0x66, 0x3c, 0x7c, 0x07, 0x80, 0x00, 0x66, 0x6e, 0x66, 0x66, 0x66, 0x66, 0x30, 0x05, 
	0x80, 0x00, 0x7c, 0x70, 0x66, 0x66, 0x66, 0x60, 0x30, 0x01, 0x80, 0x00, 0x60, 0x60, 0x66, 0x66, 
	0x66, 0x60, 0x30, 0x01, 0x80, 0x00, 0x60, 0x60, 0x66, 0x66, 0x66, 0x60, 0x30, 0x01, 0x80, 0x00, 
	0x60, 0x60, 0x66, 0x66, 0x66, 0x66, 0x30, 0x01, 0x80, 0x00, 0x60, 0x60, 0x3c, 0x3e, 0x3c, 0x3c, 
	0x1c, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'product2', 75x12px
const unsigned char buyMenuproduct2 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x06, 0x00, 0x00, 
	0x00, 0x07, 0x80, 0x00, 0x66, 0x00, 0x00, 0x06, 0x00, 0x00, 0x30, 0x0c, 0xc0, 0x00, 0x66, 0x66, 
	0x3c, 0x3e, 0x66, 0x3c, 0x7c, 0x00, 0xc0, 0x00, 0x66, 0x6e, 0x66, 0x66, 0x66, 0x66, 0x30, 0x01, 
	0x80, 0x00, 0x7c, 0x70, 0x66, 0x66, 0x66, 0x60, 0x30, 0x03, 0x00, 0x00, 0x60, 0x60, 0x66, 0x66, 
	0x66, 0x60, 0x30, 0x06, 0x00, 0x00, 0x60, 0x60, 0x66, 0x66, 0x66, 0x60, 0x30, 0x0c, 0x00, 0x00, 
	0x60, 0x60, 0x66, 0x66, 0x66, 0x66, 0x30, 0x0c, 0x00, 0x00, 0x60, 0x60, 0x3c, 0x3e, 0x3c, 0x3c, 
	0x1c, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'product3', 75x12px
const unsigned char buyMenuproduct3 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x06, 0x00, 0x00, 
	0x00, 0x07, 0x80, 0x00, 0x66, 0x00, 0x00, 0x06, 0x00, 0x00, 0x30, 0x0c, 0xc0, 0x00, 0x66, 0x66, 
	0x3c, 0x3e, 0x66, 0x3c, 0x7c, 0x00, 0xc0, 0x00, 0x66, 0x6e, 0x66, 0x66, 0x66, 0x66, 0x30, 0x00, 
	0xc0, 0x00, 0x7c, 0x70, 0x66, 0x66, 0x66, 0x60, 0x30, 0x03, 0x80, 0x00, 0x60, 0x60, 0x66, 0x66, 
	0x66, 0x60, 0x30, 0x00, 0xc0, 0x00, 0x60, 0x60, 0x66, 0x66, 0x66, 0x60, 0x30, 0x00, 0xc0, 0x00, 
	0x60, 0x60, 0x66, 0x66, 0x66, 0x66, 0x30, 0x0c, 0xc0, 0x00, 0x60, 0x60, 0x3c, 0x3e, 0x3c, 0x3c, 
	0x1c, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'product4', 75x12px
const unsigned char buyMenuproduct4 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x06, 0x00, 0x00, 
	0x00, 0x00, 0xc0, 0x00, 0x66, 0x00, 0x00, 0x06, 0x00, 0x00, 0x30, 0x01, 0xc0, 0x00, 0x66, 0x66, 
	0x3c, 0x3e, 0x66, 0x3c, 0x7c, 0x03, 0xc0, 0x00, 0x66, 0x6e, 0x66, 0x66, 0x66, 0x66, 0x30, 0x06, 
	0xc0, 0x00, 0x7c, 0x70, 0x66, 0x66, 0x66, 0x60, 0x30, 0x0c, 0xc0, 0x00, 0x60, 0x60, 0x66, 0x66, 
	0x66, 0x60, 0x30, 0x0f, 0xc0, 0x00, 0x60, 0x60, 0x66, 0x66, 0x66, 0x60, 0x30, 0x00, 0xc0, 0x00, 
	0x60, 0x60, 0x66, 0x66, 0x66, 0x66, 0x30, 0x00, 0xc0, 0x00, 0x60, 0x60, 0x3c, 0x3e, 0x3c, 0x3c, 
	0x1c, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'product5', 75x12px
const unsigned char buyMenuproduct5 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x06, 0x00, 0x00, 
	0x00, 0x0f, 0xc0, 0x00, 0x66, 0x00, 0x00, 0x06, 0x00, 0x00, 0x30, 0x0c, 0x00, 0x00, 0x66, 0x66, 
	0x3c, 0x3e, 0x66, 0x3c, 0x7c, 0x0c, 0x00, 0x00, 0x66, 0x6e, 0x66, 0x66, 0x66, 0x66, 0x30, 0x0f, 
	0x80, 0x00, 0x7c, 0x70, 0x66, 0x66, 0x66, 0x60, 0x30, 0x00, 0xc0, 0x00, 0x60, 0x60, 0x66, 0x66, 
	0x66, 0x60, 0x30, 0x00, 0xc0, 0x00, 0x60, 0x60, 0x66, 0x66, 0x66, 0x60, 0x30, 0x00, 0xc0, 0x00, 
	0x60, 0x60, 0x66, 0x66, 0x66, 0x66, 0x30, 0x0c, 0xc0, 0x00, 0x60, 0x60, 0x3c, 0x3e, 0x3c, 0x3c, 
	0x1c, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'product6', 75x12px
const unsigned char buyMenuproduct6 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x06, 0x00, 0x00, 
	0x00, 0x07, 0x80, 0x00, 0x66, 0x00, 0x00, 0x06, 0x00, 0x00, 0x30, 0x0c, 0xc0, 0x00, 0x66, 0x66, 
	0x3c, 0x3e, 0x66, 0x3c, 0x7c, 0x0c, 0x00, 0x00, 0x66, 0x6e, 0x66, 0x66, 0x66, 0x66, 0x30, 0x0c, 
	0x00, 0x00, 0x7c, 0x70, 0x66, 0x66, 0x66, 0x60, 0x30, 0x0f, 0x80, 0x00, 0x60, 0x60, 0x66, 0x66, 
	0x66, 0x60, 0x30, 0x0c, 0xc0, 0x00, 0x60, 0x60, 0x66, 0x66, 0x66, 0x60, 0x30, 0x0c, 0xc0, 0x00, 
	0x60, 0x60, 0x66, 0x66, 0x66, 0x66, 0x30, 0x0c, 0xc0, 0x00, 0x60, 0x60, 0x3c, 0x3e, 0x3c, 0x3c, 
	0x1c, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'product7', 75x12px
const unsigned char buyMenuproduct7 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x06, 0x00, 0x00, 
	0x00, 0x0f, 0xc0, 0x00, 0x66, 0x00, 0x00, 0x06, 0x00, 0x00, 0x30, 0x00, 0xc0, 0x00, 0x66, 0x66, 
	0x3c, 0x3e, 0x66, 0x3c, 0x7c, 0x00, 0xc0, 0x00, 0x66, 0x6e, 0x66, 0x66, 0x66, 0x66, 0x30, 0x01, 
	0x80, 0x00, 0x7c, 0x70, 0x66, 0x66, 0x66, 0x60, 0x30, 0x03, 0x00, 0x00, 0x60, 0x60, 0x66, 0x66, 
	0x66, 0x60, 0x30, 0x06, 0x00, 0x00, 0x60, 0x60, 0x66, 0x66, 0x66, 0x60, 0x30, 0x0c, 0x00, 0x00, 
	0x60, 0x60, 0x66, 0x66, 0x66, 0x66, 0x30, 0x0c, 0x00, 0x00, 0x60, 0x60, 0x3c, 0x3e, 0x3c, 0x3c, 
	0x1c, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'product8', 75x12px
const unsigned char buyMenuproduct8 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x06, 0x00, 0x00, 
	0x00, 0x07, 0x80, 0x00, 0x66, 0x00, 0x00, 0x06, 0x00, 0x00, 0x30, 0x0c, 0xc0, 0x00, 0x66, 0x66, 
	0x3c, 0x3e, 0x66, 0x3c, 0x7c, 0x0c, 0xc0, 0x00, 0x66, 0x6e, 0x66, 0x66, 0x66, 0x66, 0x30, 0x0c, 
	0xc0, 0x00, 0x7c, 0x70, 0x66, 0x66, 0x66, 0x60, 0x30, 0x07, 0x80, 0x00, 0x60, 0x60, 0x66, 0x66, 
	0x66, 0x60, 0x30, 0x0c, 0xc0, 0x00, 0x60, 0x60, 0x66, 0x66, 0x66, 0x60, 0x30, 0x0c, 0xc0, 0x00, 
	0x60, 0x60, 0x66, 0x66, 0x66, 0x66, 0x30, 0x0c, 0xc0, 0x00, 0x60, 0x60, 0x3c, 0x3e, 0x3c, 0x3c, 
	0x1c, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'product9', 75x12px
const unsigned char buyMenuproduct9 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x06, 0x00, 0x00, 
	0x00, 0x07, 0x80, 0x00, 0x66, 0x00, 0x00, 0x06, 0x00, 0x00, 0x30, 0x0c, 0xc0, 0x00, 0x66, 0x66, 
	0x3c, 0x3e, 0x66, 0x3c, 0x7c, 0x0c, 0xc0, 0x00, 0x66, 0x6e, 0x66, 0x66, 0x66, 0x66, 0x30, 0x0c, 
	0xc0, 0x00, 0x7c, 0x70, 0x66, 0x66, 0x66, 0x60, 0x30, 0x07, 0xc0, 0x00, 0x60, 0x60, 0x66, 0x66, 
	0x66, 0x60, 0x30, 0x00, 0xc0, 0x00, 0x60, 0x60, 0x66, 0x66, 0x66, 0x60, 0x30, 0x00, 0xc0, 0x00, 
	0x60, 0x60, 0x66, 0x66, 0x66, 0x66, 0x30, 0x0c, 0xc0, 0x00, 0x60, 0x60, 0x3c, 0x3e, 0x3c, 0x3c, 
	0x1c, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'product10', 75x12px
const unsigned char buyMenuproduct10 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x06, 0x00, 0x00, 
	0x00, 0x01, 0x87, 0x80, 0x66, 0x00, 0x00, 0x06, 0x00, 0x00, 0x30, 0x03, 0x8c, 0xc0, 0x66, 0x66, 
	0x3c, 0x3e, 0x66, 0x3c, 0x7c, 0x07, 0x8c, 0xc0, 0x66, 0x6e, 0x66, 0x66, 0x66, 0x66, 0x30, 0x05, 
	0x8d, 0xc0, 0x7c, 0x70, 0x66, 0x66, 0x66, 0x60, 0x30, 0x01, 0x8f, 0xc0, 0x60, 0x60, 0x66, 0x66, 
	0x66, 0x60, 0x30, 0x01, 0x8e, 0xc0, 0x60, 0x60, 0x66, 0x66, 0x66, 0x60, 0x30, 0x01, 0x8c, 0xc0, 
	0x60, 0x60, 0x66, 0x66, 0x66, 0x66, 0x30, 0x01, 0x8c, 0xc0, 0x60, 0x60, 0x3c, 0x3e, 0x3c, 0x3c, 
	0x1c, 0x01, 0x87, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 1440)
const int buyMenuallArray_LEN = 10;
const unsigned char* buyMenuallArray[10] = {
	buyMenuproduct1,
	buyMenuproduct2,
	buyMenuproduct3,
	buyMenuproduct4,
	buyMenuproduct5,
	buyMenuproduct6,
	buyMenuproduct7,
	buyMenuproduct8,
	buyMenuproduct9,
  buyMenuproduct10
};



const unsigned char triangle [] PROGMEM = {
	0x08, 0x18, 0x38, 0x78, 0xf8, 0x78, 0x38, 0x18, 0x08
};
const unsigned char* triangle_pointer = triangle;




void mqttInit() {
  WiFi.begin(SSID, PASSWORD);
  while (WiFi.status() != WL_CONNECTED) {
      delay(500);
      Serial.print(".");
  }
  Serial.println("");
  Serial.print("Connected to ");
  Serial.println(SSID);
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  if (!mqttClient.connect(mqqttBroker, mqttPort)) {
    Serial.print("MQTT connection failed! Error code = ");
    Serial.println(mqttClient.connectError());

    while (1);
  }
  Serial.println("You're connected to the MQTT broker!");
  Serial.println();

}

void mqttLoop() {
    while (!mqttClient.connected()) {
        Serial.print("Attempting MQTT connection...");
        mqttClient.connect(mqqttBroker, mqttPort);
        if (mqttClient.connect(mqttClientID)) {
          Serial.println("connected");
        }
        else if (WiFi.status() != WL_CONNECTED){
          Serial.print("Wifi connection failed");
          Serial.println(" try again in 5 seconds");
          delay(5000);
        } 
        else {
          Serial.print("failed, rc=");
          Serial.print(mqttClient.connectError());
          Serial.println(" try again in 5 seconds");
          delay(5000);
        }
    }
}

void pinInit() {
  pinMode(DOWN_PIN, INPUT);
  pinMode(ENTER_PIN, INPUT);
  pinMode(EXIT_PIN, INPUT);
  pinMode(CART_PIN, INPUT);
  pinMode(RESUPPLY_PIN, INPUT);
  pinMode(CANCEL_PIN, INPUT);
}

void setup() {
  pinInit();
  Serial.begin(9600);
  Serial.println(F("\nESP8266 WiFi scan example"));

  // Set WiFi to station mode
  WiFi.mode(WIFI_STA);

  // Disconnect from an AP if it was previously connected
  mqttInit();

  display.begin(SH1106_SWITCHCAPVCC, SCREEN_ADDRESS);
  // Show image buffer on the display hardware.
  // Since the buffer is intialized with an Adafruit splashscreen
  // internally, this will display the splashscreen.
  display.display();
  delay(2000);

  // Clear the buffer.
  display.clearDisplay();

}
int menuIndex1 = 0;
void loop() {

  // put your main code here, to run repeatedly:
  if (digitalRead(DOWN_PIN) == 1){
    display.clearDisplay();
    print_scrn(mainMenuOled);
    menuIndex1++;
    if (menuIndex1 == 3){
      menuIndex1 = 0;
    }
    display.drawBitmap(101, 11 + menuIndex1*17, triangle_pointer, 5, 10, 1);
    display.display();
    delay(250);
  }
  else{
    print_scrn(mainMenuOled);
    display.drawBitmap(101, 11 + menuIndex1*17, triangle_pointer, 5, 10, 1);
    display.display();
    delay(250);
  }
  
  if (digitalRead(ENTER_PIN) == 1){
    switch (menuIndex1) {
    case 0:
      display.clearDisplay();
        buyMenu ();
      break;
    default:
      // statements
      break;
}
  }
}
//display.drawBitmap(0, 0, quantityViewproductComOled, LOGO_WIDTH, LOGO_HEIGHT, 1);

void print_scrn (const unsigned char* pointer){
  display.drawBitmap(0,0,pointer, LOGO_WIDTH, LOGO_HEIGHT, 1);
  display.display();
}

void buyMenu (){
  int menuIndex2 = 0;
  for(;;){
    if (digitalRead(DOWN_PIN) == 1){
      menuIndex2++;
      display.clearDisplay();
      print_scrn(productViewComPtr);
      if (menuIndex2 == 10){
        menuIndex2 = 0;
      }
      display.drawBitmap(26, 4, buyMenuallArray[menuIndex2], 75, 12, 1);
      display.display();
      delay(250);
    }
    else{
      print_scrn(productViewComPtr);
      display.drawBitmap(26, 4, buyMenuallArray[menuIndex2], 75, 12, 1);
      display.display();
      delay(250);
    }
    if (digitalRead(EXIT_PIN) == 1){
      display.clearDisplay();
      break;
    }
  }
}
